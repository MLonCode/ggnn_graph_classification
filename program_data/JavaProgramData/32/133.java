package <missing>;

public class GlobalMembers
{
	public static void Main()
	{
		int n;
		int d;
		int e;
		int i;
		int k;
		int carry = 0;
	char[] a = {};
	char[] b = {};
	char[] c = {};
	String p1 = a;
	String p2 = b;
	void move(char * p,int m);
	String tempVar = ConsoleInput.scanfRead();
	if (tempVar != null)
	{
		n = Integer.parseInt(tempVar);
	}
	for (i = 0;i <= n - 1;i++)
	{
		a = new Scanner(System.in).nextLine();
	a = new Scanner(System.in).nextLine();
	b = new Scanner(System.in).nextLine();
	d = a.length();
	e = b.length();
tangible.RefObject<String> tempRef_p1 = new tangible.RefObject<String>(p1);
	move(tempRef_p1, d);
	p1 = tempRef_p1.argValue;
tangible.RefObject<String> tempRef_p2 = new tangible.RefObject<String>(p2);
	move(tempRef_p2, e);
	p2 = tempRef_p2.argValue;
	for (k = 99 - d + 1;k <= 99 - e;k++)
	{
	b[k] = '0';
	}
	for (k = 99;k >= 99 - d + 1;k--)
	{
	 b[k] = b[k] - '0';
	  a[k] = a[k] - '0';
	if (carry + b[k] > a[k])
	{
			c[k] = a[k] - b[k] + 10 - carry;
		 carry = 1;
	}
	  else
	  {
			c[k] = a[k] - b[k] - carry;
		  carry = 0;
	  }
		c[k] = c[k] + '0';
	}
	for (k = 0;k <= 99;k++)
	{
		  if (c[k] != 0)
		  {
		System.out.printf("%c",c[k]);
		  }
	}
	System.out.print("\n");
	 for (k = 0;k <= 100;k++)
	 {
	  c[k] = 0;
	 }
	carry = 0;
	}
	}
	 public static void move(tangible.RefObject<String> p, int m)
	 {
		int h;
	  *(p.argValue.Substring(100)) = 0;
	  for (h = 99;h >= 99 - m + 1;h--)
	  {
	  *(p.argValue.Substring(h)) = *(p.argValue.Substring(h) - 100 + m);
	  }
	  for (h = 0;h <= 99 - m;h++)
	  {
	  *(p.argValue.Substring(h)) = 0;
	  }
	 }

}

