package <missing>;

public class GlobalMembers
{
	public static int Main()
	{
		int n;
		String tempVar = ConsoleInput.scanfRead();
		if (tempVar != null)
		{
			n = Integer.parseInt(tempVar);
		}
		char[] s = {};
		String tempVar2 = ConsoleInput.scanfRead();
		if (tempVar2 != null)
		{
			s = tempVar2.charAt(0);
		}
		int len;
		len = s.length();
//C++ TO JAVA CONVERTER TODO TASK: Java does not allow declaring types within methods:
	//	struct substring
	//	{
	//		char ss[5];
	//		int count;
	//	}
	//	sub[500];
		int i;
		for (i = 0;i < 500;i++)
		{
//C++ TO JAVA CONVERTER TODO TASK: The memory management function 'memset' has no equivalent in Java:
//C++ TO JAVA CONVERTER TODO TASK: There is no Java equivalent to 'sizeof':
			memset(sub[i].ss,' ',sizeof(sub[i].ss));
			sub[i].count = 0;
		}
		int entry = 0;
		for (i = 0;i <= len - n;i++)
		{
			char[] bank = {' ', '\0', '\0', '\0', '\0'};
			int curr;
			for (curr = 0;curr < n;curr++)
			{
				bank[curr] = s[curr + i];
			}
			int same = 0;
			int k;
			for (k = 0;k < entry;k++)
			{
				if (strcmp(bank,sub[k].ss) == 0)
				{
					sub[k].count += 1;
					same = 1;
					break;
				}
			}
			if (same == 0)
			{
				sub[entry].ss = bank;
				sub[entry].count = 1;
				entry++;
			}
		}
		int max = 0;
		for (i = 0;i < entry;i++)
		{
			if (sub[i].count > max)
			{
				max = sub[i].count;
			}
		}
		if (max < 2)
		{
			System.out.print("NO");
		}
		else
		{
			System.out.printf("%d",max);
			for (i = 0;i < entry;i++)
			{
				if (sub[i].count == max)
				{
					System.out.printf("\n%s",sub[i].ss);
				}
			}
		}
		return 0;
	}

}

