package <missing>;

public class GlobalMembers
{
	public static void Main()
	{
	 double n;
	 int i;
	 int j;
	 double sum = 0.0;
	 int flag = 1;
	 double average = 0.0;
	 int[] a = new int[300]; //a[]???????d[]????????????a[k]
	 int[] c = {-1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0};
	 int[] d = new int[300];
	 double[] b = {0.0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}; //b[]??????
	 String tempVar = ConsoleInput.scanfRead();
	 if (tempVar != null)
	 {
		 n = Double.parseDouble(tempVar);
	 }

	 for (i = 0;i < n;i++)
	 {
		 c[i] = i; //c[]????�??�
		 String tempVar2 = ConsoleInput.scanfRead();
		 if (tempVar2 != null)
		 {
			 a + i = tempVar2;
		 }
		 sum = sum + a[i];
	 }
	 average = sum / n;
	 for (j = 0;j < n;j++)
	 {
		 b[j] = Math.abs(a[j] - average);
	 }
	 for (i = 0;i < n;i++)
	 {
		 for (j = i + 1;j < n;j++)
		 {
			 if (b[i] < b[j])
			 {
			  int t;
			  double p;
			  t = c[i];
			  c[i] = c[j];
			  c[j] = t;
			  p = b[i];
			  b[i] = b[j];
			  b[j] = p;
			 }
		 }
	 }
	 for (i = 0;i < n;i++)
	 {
	  if (b[i] == b[i + 1])
	  {
		  flag = flag + 1;
	  }
	  else
	  {
		  break; //??break???????????????i=n-1??????flag??????
	  }
	 }
	 if (flag == 1)
	 {
		 System.out.printf("%d",a[c[0]]);
	 }
	 else
	 {

		 {

			 for (i = 0;i < flag;i++)
			 {

				 d[i] = a[c[i]];
			 }

	 }
	 for (i = 0;i < flag;i++)
	 {
		 for (j = i;j < flag;j++)
		 {
		  if (d[i] > d[j])
		  {
		   int t;
		   t = d[i];
		   d[i] = d[j];
		   d[j] = t;
		  }
		 }
	 }
	 for (i = 0;i < flag - 1;i++)
	 {
		 System.out.printf("%d,",d[i]);
	 }
	 if (i == flag - 1)
	 {
		 System.out.printf("%d",d[i]);
	 }
	 }
	}

}

