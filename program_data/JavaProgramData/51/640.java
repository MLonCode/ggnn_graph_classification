import java.util.*;

package <missing>;

public class GlobalMembers
{
	//****************************
	//*???3
	//*??????
	//*???2013.12.11
	//****************************
	public static int n;

	public static int count1(tangible.RefObject<String> p, tangible.RefObject<String> P, int geshu) //????count?
	{
		if (geshu == n) //???????geshu=n???
		{
			if (p.argValue == P.argValue) //?????????????????
			{

				return 1;
			}

			else
			{

				return 0; //????0
			}
		}
		if (p.argValue == P.argValue) //?????????????
		{
			if (count1(p.argValue.Substring(1), P.argValue.Substring(1), geshu + 1) != 0) //???????????1
			{

				return 1;
			}

			else
			{

				return 0; //?????
			}
		}
		else
		{

			return 0; //??????????0
		}
	}
	public static int Main()
	{
		String str = new String(new char[505]); //?????????
//C++ TO JAVA CONVERTER TODO TASK: Pointer arithmetic is detected on this variable, so pointers on this variable are left unchanged:
		char * p = null;

		int max = 1; //??max???????? cal????
		int cal = 0;
		int[] num = new int[505];
		int f = 1;
		int len;
		//num????????????? f????????l???????

		n = Integer.parseInt(ConsoleInput.readToWhiteSpace(true));

		System.in.read(); //????

		str = new Scanner(System.in).nextLine(); //?????

		len = str.length();

		for (p = str; * (p + n - 1) != '\0'; p++) //????????????????????n???????
		{
			for (int i = 1; * (p + i + n - 1) != '\0'; i++) //????????????????????????
			{

			tangible.RefObject<String> tempRef_p = new tangible.RefObject<String>(p);
				f += count1(tempRef_p, p + i, 1); //????f++
				p = tempRef_p.argValue;
			}

			if (max <= f) //?????
			{

				max = f;
			}

			num[cal] = f; //???????????

			f = 1;

			cal++;

		}
		if (max == 1) //????????1???NO
		{

			System.out.print("NO");
			System.out.print("\n");
		}

		else //?????????????????
		{
			System.out.print(max);
			System.out.print("\n");

			for (int i = 0; i < len; i++)
			{
				p = str.Substring(i);

				if (num[i] == max)
				{
					for (int j = 0; j < n; j++)
					{

						System.out.print((p + j));
					}

					System.out.print("\n");
				}
			}
		}
		return 0;
	}
}

