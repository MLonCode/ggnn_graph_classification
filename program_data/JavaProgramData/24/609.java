package <missing>;

public class GlobalMembers
{
	public static int Main()
	{
		String s = new String(new char[3000]);
		char[][] word =
		{
			{}
		};
		int len;
		int i;
		int word_num;
		int char_num;
		int min_num;
		int max_num;
		int min;
		int max;

		s = new Scanner(System.in).nextLine();

		min_num = 0;
		max_num = 0;
		len = s.length();
		for (i = 0;i < len;i++)
		{
			if (s.charAt(i) != ' ')
			{
				word[word_num][char_num] = s.charAt(i);
				char_num++;
			}
			else if (s.charAt(i) == ' ')
			{
				word_num++;
				char_num = 0;
			}
		}

		min = 0;
		max = 0;
		min_num = String.valueOf(word[0]).length();
		max_num = String.valueOf(word[0]).length();
		for (i = 1;i <= word_num;i++)
		{
			if (String.valueOf(word[i]).length() < min_num)
			{
				min_num = String.valueOf(word[i]).length();
				min = i;
			}
			if (String.valueOf(word[i]).length() > max_num)
			{
				max_num = String.valueOf(word[i]).length();
				max = i;
			}
		}

		System.out.printf("%s\n%s\n",word[max],word[min]);

		return 0;
	}
}
