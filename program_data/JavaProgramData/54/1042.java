package <missing>;

public class GlobalMembers
{
	public static int Main()
	{
		int fen = new int(int n,int k,int i,int * a,int m);
		int n;
		int k;
		int i;
		int x = 1;
		int m = 0;
//C++ TO JAVA CONVERTER TODO TASK: Java does not have an equivalent to pointers to value types:
//ORIGINAL LINE: int *a;
		int a;
		a = x; //a?????????????
		String tempVar = ConsoleInput.scanfRead();
		if (tempVar != null)
		{
			n = Integer.parseInt(tempVar);
		}
		String tempVar2 = ConsoleInput.scanfRead();
		if (tempVar2 != null)
		{
			k = Integer.parseInt(tempVar2);
		}
		i = n;
	tangible.RefObject<Integer> tempRef_a = new tangible.RefObject<Integer>(a);
		System.out.printf("%d",fen(n, k, i, tempRef_a, m));
		a = tempRef_a.argValue;
		return 0;
	}
	public static int fen(int n, int k, int i, tangible.RefObject<Integer> a, int m)
	{
		int t;
		int pan = new int(int t,int n,int k,int i,int * a.argValue,int m);
		if (i == 1)
		{
			m = n * a.argValue + k;
		}
		if (i != 1)
		{
			t = fen(n, k, i - 1, a, m); //t???????????????????
			t = pan(t, n, k, i, a, m); //pan??????????t????n-1?????t?????????n-1?????
			m = n * (t / (n - 1)) + k; //????????????????????????
		}
		return m;
	}
	public static int pan(int t, int n, int k, int i, tangible.RefObject<Integer> a, int m)
	{
		int fen = new int(int n,int k,int i,int * a.argValue,int m);
		if (t % (n - 1) != 0)
		{ //????????????????n-1?????????????????????????
			a.argValue++; //????????????
			t = fen(n, k, i - 1, a, m); //????
			t = pan(t, n, k, i, a, m); //????????????????????
		}
		return t;
	}

}

