package <missing>;

public class GlobalMembers
{
	/*??????
	????????n??????10??,??n?????????,
	???????????????????????????
	????
	????????????????n??????????????????(??????)?
	????????0?100????????????????
	????
	?????n????????n*(n-1)/2???????????
	(x1,y1,z1)-(x2,y2,z2)=??
	???????????2?? */
	public static int Main()
	{
		int n;
		n = Integer.parseInt(ConsoleInput.readToWhiteSpace(true));
		int[] x = new int[n + 1];
		int[] y = new int[n + 1];
		int[] z = new int[n + 1];
		float[] dst = new float[n * n];
		int[] sma = new int[n * n]; //dst=distance;sma??????lar?dst??,???????????
		int[] lar = new int[n * n];
		int count = 0;
		float t;
		for (int i = 1; i <= n; ++i)
		{
			x[i] = Integer.parseInt(ConsoleInput.readToWhiteSpace(true));
			y[i] = Integer.parseInt(ConsoleInput.readToWhiteSpace(true));
			z[i] = Integer.parseInt(ConsoleInput.readToWhiteSpace(true));
		}
		for (int e = 1; e <= n; e++)
		{
			for (int e1 = e+1; e1 <= n; ++e1)
			{
			++count;
			sma[count] = e;
			lar[count] = e1;
			dst[count] = Math.sqrt((x[e] - x[e1]) * (x[e] - x[e1]) + (y[e] - y[e1]) * (y[e] - y[e1]) + (z[e] - z[e1]) * (z[e] - z[e1]));
			}
		}
		for (int e = 1; e <= count - 1; ++e) //???
		{
		for (int i = 1; i <= count - e ;++i)
		{
			if (dst[i] < dst[i + 1])
			{
				t = dst[i];
				dst[i] = dst[i + 1];
				dst[i + 1] = t;
				t = sma[i];
				sma[i] = sma[i + 1];
				sma[i + 1] = (int)t;
				t = lar[i];
				lar[i] = lar[i + 1];
				lar[i + 1] = (int)t;

			}
		}
		}
		for (int e = 1; e <= count ; ++e)
		{
		System.out.printf("(%d,%d,%d)-(%d,%d,%d)=%.2f\n",x[sma[e]],y[sma[e]],z[sma[e]],x[lar[e]],y[lar[e]],z[lar[e]],dst[e]);
		}
		return 0;
	}
}

