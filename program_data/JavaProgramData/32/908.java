package <missing>;

public class GlobalMembers
{
	/*???1000012904
	  ?????????
	  ?????
	  ???2010?11?19?
	*/
	public static int Main()
	{
		int n;
		n = Integer.parseInt(ConsoleInput.readToWhiteSpace(true));
		for (int i = 0; i < n; i++)
		{
			int[] numa = new int[101]; //???????numa?????numb
			int[] numb = new int[101];
			String stra = new String(new char[101]); //?????????stra,strb
			String strb = new String(new char[101]);
			int lena; //???????lena,????lenb
			int lenb;
			stra = ConsoleInput.readToWhiteSpace(true).charAt(0);
			strb = ConsoleInput.readToWhiteSpace(true).charAt(0);
			lena = stra.length();
			lenb = strb.length(); //??????????????
//C++ TO JAVA CONVERTER TODO TASK: The memory management function 'memset' has no equivalent in Java:
			memset(numa, 0, (Integer.SIZE / Byte.SIZE));
//C++ TO JAVA CONVERTER TODO TASK: The memory management function 'memset' has no equivalent in Java:
			memset(numb, 0, (Integer.SIZE / Byte.SIZE)); //?????
			int j = 0;
			int k = 0;
			for (k = lena - 1; k >= 0; k--)
			{
				numa[j++] = stra.charAt(k) - '0';
			} //???????????????????numa
			j = 0;
			for (k = lenb - 1; k >= 0; k--)
			{
				numb[j++] = strb.charAt(k) - '0';
			} //??????????????????numb
			for (k = 0; k < lena; k++)
			{
				if (numa[k] < numb[k])
				{
					numa[k] = numa[k] + 10;
					numa[k + 1] = numa[k + 1] - 1;
				} //?????????????????????1????10?????1
				numb[k] = numa[k] - numb[k]; //????????????????????
			}
			k = lena;
			while (numb[k] == 0)
			{
				k--;
			}
			//???????????????
			for (;k >= 0; k--)
			{
				System.out.print(numb[k]);
			}
			System.out.print("\n");
			System.in.read(); //???????????
		}
		return 0;
	}


}

