package <missing>;

public class GlobalMembers
{
	public static int Main()
	{
		char[] a = {};
		char[] b = {};
		char[] c = {};
		int len;
		int i = 0;
		int j = 0;
		while ((a = ConsoleInput.readToWhiteSpace(true).charAt(0)).length() > 0)
		{
			//cin.get(a,100);
			len = a.length();
			for (i = 0;i < len;i++)
			{
				c[i] = a[i];
			}
			for (i = 0;i < len;i++)
			{
				if (c[i] == ')')
				{
					for (j = i;j >= 0;j--)
					{
						if (c[j] == '(')
						{
							c[i] = '.';
							c[j] = '.';
							break;
						}
					}
					if (j == -1)
					{
						b[i] = '?';
					}
				}
			}
			for (i = 0;i < len;i++)
			{
				if (c[i] == '(')
				{
					b[i] = '$';
				}
			}
			System.out.print(a);
			System.out.print("\n");
			for (i = 0;i < len;i++)
			{
				if (b[i] != '$' && b[i] != '?')
				{
					System.out.print(' ');
				}
				else
				{
					System.out.print(b[i]);
				}
			}
			System.out.print("\n");
			i = 0;
			j = 0;
//C++ TO JAVA CONVERTER TODO TASK: The memory management function 'memset' has no equivalent in Java:
			memset(a,0,(Character.SIZE / Byte.SIZE));
//C++ TO JAVA CONVERTER TODO TASK: The memory management function 'memset' has no equivalent in Java:
			memset(b,0,(Character.SIZE / Byte.SIZE));
//C++ TO JAVA CONVERTER TODO TASK: The memory management function 'memset' has no equivalent in Java:
			memset(c,0,(Character.SIZE / Byte.SIZE));
		}
		return 0;
	}



}

