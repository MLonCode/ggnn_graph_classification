import java.util.*;

package <missing>;

public class GlobalMembers
{
	public static int Main()
	{
		int[] timepoint = new int[1000]; //????????

		int npeople = 0; //???
		final String ch = ""; //???? ?????
		int[] intime = new int[1000];
		int[] outtime = new int[1000];
		char[][] intimech = new char[1000][1000];
		char[][] outtimech = new char[1000][1000];

		for (int i = 0;i <= 999;i++)
		{
			for (int j = 0;j <= 999;j++)
			{
				intimech[i][j] = '\0';
				outtimech[i][j] = '\0';
			} //?????
		}

		ch = new Scanner(System.in).nextLine(); //???????????????
		int i1 = 0;
		int i2 = 0;
		for (int i = 0;i <= ch.length();i++)
		{
			if (ch.charAt(i) != ',')
			{
				intimech[i1][i2] = ch.charAt(i);
				i2++;
			}
			if (ch.charAt(i) == ',')
			{
				i1++;
				i2 = 0;
				npeople++; //?????????
			}
		} //???????????????????????????
		npeople = npeople+1;
		for (int i = 0;i <= npeople-1;i++)
		{
			intime[i] = Integer.parseInt(intimech[i]);
		} //?????????????????????????
	/////////////////////////////////////????????

//C++ TO JAVA CONVERTER TODO TASK: The memory management function 'memset' has no equivalent in Java:
		memset(ch,'\0',10000); //??????

		ch = new Scanner(System.in).nextLine(); //???????????????
		i1 = 0;
		i2 = 0;
		for (int i = 0;i <= ch.length();i++)
		{
			if (ch.charAt(i) != ',')
			{
				outtimech[i1][i2] = ch.charAt(i);
				i2++;
			}
			if (ch.charAt(i) == ',')
			{
				i1++;
				i2 = 0;
			}
		} //???????????????????????????
		for (int i = 0;i <= npeople-1;i++)
		{
			outtime[i] = Integer.parseInt(outtimech[i]);
		} //?????????????????????????
	/////////////////////////////////////????????

		for (int i = 0;i <= npeople-1;i++)
		{
			for (int j = intime[i];j <= outtime[i] - 1;j++)
			{
				timepoint[j]++;
			} //?????????????????? ?????1
		}

		int max = 0;
		for (int i = 0;i <= 999;i++)
		{
			if (timepoint[i] > max)
			{
				max = timepoint[i];
			}
		} //??????

		System.out.print(npeople);
		System.out.print(" ");
		System.out.print(max);
		System.out.print("\n");

		return 0;
	}

}
