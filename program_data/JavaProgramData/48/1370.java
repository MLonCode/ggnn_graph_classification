package <missing>;

public class GlobalMembers
{
	/*
	?? ?????07????????1
	??
	????9???????????????m?????????????????????10???????10??????????????????????????????????????????n(1?n?4)????????????????
	
	????
	?????????????m????????????2?m?30???????n????????1?m?4??
	
	????
	??????????????????????????????n???????????????
	
	????
	2 1
	
	????
	0 0 0 0 0 0 0 0 0
	0 0 0 0 0 0 0 0 0
	0 0 0 0 0 0 0 0 0
	0 0 0 2 2 2 0 0 0
	0 0 0 2 4 2 0 0 0
	0 0 0 2 2 2 0 0 0
	0 0 0 0 0 0 0 0 0
	0 0 0 0 0 0 0 0 0
	0 0 0 0 0 0 0 0 0 
	*/


	public static int[][] temp = new int[9][9];
	public static int[][] a = new int[9][9];

	public static void proliferation(int ds,int dd)
	{
		int m;
		int n;
		int j;
		int k;
		if (dd == ds)
		{
			for (j = 0;j <= 8;j++)
			{
				for (k = 0;k <= 8;k++)
				{
					if (k == 0)
					{
						System.out.print(a[j][k]);
					}
					else
					{
						System.out.print(" ");
						System.out.print(a[j][k]);
					}
				}
				System.out.print("\n");
			}
		}
		else if (dd < ds)
		{
			for (m = 4 - dd;m <= 4 + dd;m++)
			{
				for (n = 4 - dd;n <= 4 + dd;n++)
				{
					for (j = m - 1;j <= m + 1;j++)
					{
						for (k = n - 1;k <= n + 1;k++)
						{
							temp[j][k] += a[m][n];
						}
					}
				}
			}

			dd++;

			for (j = 4 - dd;j <= 4 + dd;j++)
			{
				for (k = 4 - dd;k <= 4 + dd;k++)
				{
					a[j][k] = temp[j][k];
				}
			}

			proliferation(ds, dd);
		}
	}

	public static int Main()
	{
		int ds;
		int m;
		m = Integer.parseInt(ConsoleInput.readToWhiteSpace(true));
		ds = Integer.parseInt(ConsoleInput.readToWhiteSpace(true));

//C++ TO JAVA CONVERTER TODO TASK: The memory management function 'memset' has no equivalent in Java:
		memset(temp,0,(Integer.SIZE / Byte.SIZE));
//C++ TO JAVA CONVERTER TODO TASK: The memory management function 'memset' has no equivalent in Java:
		memset(a,0,(Integer.SIZE / Byte.SIZE));

		a[4][4] = m;
		temp[4][4] = m;
		proliferation(ds, 0);

		return 0;
	}
}

