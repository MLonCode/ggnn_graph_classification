package <missing>;

public class GlobalMembers
{
	/* ????????????????????????i????????? */

	/* ?IDX(i)????i?????????? */

	/* ?OFF(i)????i????????????????? */

	/* ????i??????????1??i????? */

	/* ???i????????0???i????? */

	public static int Main()
	{
		int n;
		int i;
		int j;
	//C++ TO JAVA CONVERTER WARNING: Unsigned integer types have no direct equivalent in Java:
	//ORIGINAL LINE: unsigned int *isprimebits;
//C++ TO JAVA CONVERTER TODO TASK: Java does not have an equivalent to pointers to value types:
//ORIGINAL LINE: uint *isprimebits;
		int isprimebits; // ??????????????
		String tempVar = ConsoleInput.scanfRead();
		if (tempVar != null)
		{
			n = Integer.parseInt(tempVar);
		}

		/* ????????????1??????????? */
	//C++ TO JAVA CONVERTER WARNING: Unsigned integer types have no direct equivalent in Java:
	//ORIGINAL LINE: isprimebits = (unsigned int *) malloc((IDX(n) + 1) * sizeof(unsigned int));
//C++ TO JAVA CONVERTER TODO TASK: The memory management function 'malloc' has no equivalent in Java:
		isprimebits = (int) malloc((IDX(n) + 1) * (Integer.SIZE / Byte.SIZE));

		/* ????????????????1 */
	//C++ TO JAVA CONVERTER WARNING: Unsigned integer types have no direct equivalent in Java:
	//ORIGINAL LINE: memset(isprimebits, -1, (IDX(n) + 1) * sizeof(unsigned int));
//C++ TO JAVA CONVERTER TODO TASK: The memory management function 'memset' has no equivalent in Java:
		memset(isprimebits, -1, (IDX(n) + 1) * (Integer.SIZE / Byte.SIZE));

		/* ????????????????????????? */
		for (i = 3; i <= n / 2; i += 2)
		{
			if (ISPRIME(i))
			{
				/* ?? i ????(j)??????????????? */
				for (j = 3 * i; j <= n; j += 2 * i)
				{
					CLEARPRIME(j);
				}
			}
		}

		/* 3?n????????????????????? */
		for (i = 6; i <= n; i += 2)
		{
			for (j = 3; j <= i / 2; j += 2)
			{ // ??????j?i-j
				if (ISPRIME(j) && ISPRIME(i - j))
				{
					System.out.printf("%d=%d+%d\n", i, j, i - j);
					break;
				}
			}
		}

//C++ TO JAVA CONVERTER TODO TASK: The memory management function 'free' has no equivalent in Java:
		free(isprimebits); // ????????
		return 0;
	}


}

