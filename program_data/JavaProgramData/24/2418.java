package <missing>;

public class GlobalMembers
{
	public static int Main()
	{
		char[][] word =
		{
			{}
		};
		int[] len = new int[201];
		int count = 0;
		int in = 0;
		char[] curword = {};
		int curlen = 0;
		int maxindex = -1;
		int minindex = -1;
		while (true)
		{
			in = System.in.read();
			if (in == ' ' || in == ',' || in == '\n')
			{
				if (curlen > 0)
				{
					curword[curlen] = '\0';
					word[count] = curword;
					len[count] = curlen;
					if (maxindex == -1 || curlen > len[maxindex])
					{
						maxindex = count;
					}
					if (minindex == -1 || curlen < len[minindex])
					{
						minindex = count;
					}
					count++;
					curlen = 0;
				}

				//printf("word:%s %d\n", word[count-1], len[count-1]);
				if (in == '\n')
				{
					break;
				}
			}
			else
			{
				curword[curlen++] = in;

			}
		}
		System.out.printf("%s\n", word[maxindex]);
		System.out.printf("%s", word[minindex]);
		return 0;
	}
}
