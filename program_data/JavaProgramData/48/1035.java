package <missing>;

public class GlobalMembers
{
	//*********************************************
	//** ??????????? **
	//** ?????? 1300012722 **
	//** ???2013.12.06 **
	//*********************************************
	public static int[][] b = new int[9][9]; //????b??????????????old??????????????
	public static int[][] old = new int[9][9];
	public static void mul(int k, int day)
	{
		int i;
		int j;
		for (i = 4 - k; i <= 4 + k; i++)
		{
			for (j = 4 - k; j <= 4 + k; j++)
			{
			old[i][j] = b[i][j]; //??????????????
			}
		}
		for (i = 4 - k; i <= 4 + k; i++)
		{
			for (j = 4 - k; j <= 4 + k; j++)
			{
				pam(i, j); //????????????????
			}
		}
		k++;
		if (k < day)
		{
			mul(k, day); //???????????????
		}
		else
		{
			return;
		}
	}
	public static void pam(int x, int y)
	{
		int i;
		int j;
		for (i = x - 1; i <= x + 1; i++)
		{
			for (j = y - 1; j <= y + 1; j++)
			{
				b[i][j] = b[i][j] + old[x][y]; //????????????????????
			}
		}
		return;
	}
	public static int Main()
	{
		int m; //m????????????n???????
		int n;
		int i;
		int j;
//C++ TO JAVA CONVERTER TODO TASK: The memory management function 'memset' has no equivalent in Java:
		memset(b, 0, (Integer.SIZE / Byte.SIZE)); //b????
		m = Integer.parseInt(ConsoleInput.readToWhiteSpace(true));
		n = Integer.parseInt(ConsoleInput.readToWhiteSpace(true));
		b[4][4] = m; //????????
		mul(0, n); //??????n??????????????
		for (i = 0; i <= 8; i++)
		{
			for (j = 0; j < 8; j++)
			{
				System.out.print(b[i][j]);
				System.out.print(" ");
			}
			System.out.print(b[i][8]);
			System.out.print("\n");
		} //?????
		return 0;
	}

}

